{"version":3,"sources":["src/app/modules/auth/pages/login/login.component.html","src/app/modules/auth/auth-routing.module.ts","src/app/modules/auth/auth.module.ts","src/app/modules/auth/pages/login/login.component.css","src/app/modules/auth/pages/login/login.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\n    <div class=\\\"alert alert-info\\\">\\n        Fake Backend<br />\\n        Username: A123 Password: master<br />\\n        Username: A456 Password: regular<br />\\n        Username: A789 Password: lower<br />\\n        Real Backend<br />\\n        Username: A100001 Password: password<br />\\n\\n    </div>\\n    <div class=\\\"card\\\">\\n        <h4 class=\\\"card-header\\\">Login</h4>\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                    </div>\\n                </div>\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    Login\\n                </button>\\n                <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error.message}}</div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './pages/login/login.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n  ],\n})\nexport class AuthModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXV0aC9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\nimport { first } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      // this.router.navigate(['/']);\n    }\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log('dfs')\n    console.log(this.f.password.errors)\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      console.log(this.f.password.errors)\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          console.log(error);\n          this.error = error.error;\n          this.loading = false;\n        });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"modules-auth-auth-module-es5.js"}