{"version":3,"sources":["./src/app/core/service/project/project.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACgB;AACI;AACX;AAOpD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAQzB,YACU,IAAgB,EAChB,cAA8B;QAD9B,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAgB;QATxC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAE7B,4FAA4F;QAC5F,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACjE,CAAC;IAKE,CAAC;IAEL,qBAAqB,CAAC,KAAa;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,mCAAmC,KAAK,EAAE,CAAC;QACpE,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5C,CAAC;IACD,oBAAoB,CAAC,KAAU;QAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,kCAAkC,KAAK,EAAE,CAAC;QACnE,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5C,CAAC;CAEF;;YAfiB,+DAAU;YACA,+DAAc;;AAV7B,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAwB1B;AAxB0B","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { MessageService } from '../message.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Project } from 'src/app/shared/model/Project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  /** headers in an httpOptions object that will be passed to every HttpClient save method. */\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService\r\n  ) { }\r\n\r\n  getProjectsByEmployee(empId: number): Observable<any> {\r\n    let url = this.baseUrl + `api/projects/GetProjectsByEmpId/${empId}`;\r\n    return this.http\r\n      .get<any>(url, this.httpOptions).pipe();\r\n  }\r\n  getProjectWpDropdown(empId: any): Observable<any> {\r\n    let url = this.baseUrl + `api/projects/ProjectWpDropdown/${empId}`;\r\n    return this.http\r\n      .get<any>(url, this.httpOptions).pipe();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}