{"version":3,"sources":["./src/app/modules/employee/component/employee/employee.component.html","./src/app/modules/employee/pages/employee-change-approver/employee-change-approver.component.html","./src/app/modules/employee/pages/employee-creation/employee-creation.component.html","./src/app/modules/employee/pages/employee-edit/employee-edit.component.html","./src/app/modules/employee/pages/employee-list/employee-list.component.html","./src/app/modules/employee/pages/employee-reset-pw/employee-reset-pw.component.html","./src/app/modules/employee/pages/employee-view/employee-view.component.html","./src/app/modules/employee/component/employee/employee.component.css","./src/app/modules/employee/component/employee/employee.component.ts","./src/app/modules/employee/employee-routing.module.ts","./src/app/modules/employee/employee.module.ts","./src/app/modules/employee/pages/employee-change-approver/employee-change-approver.component.css","./src/app/modules/employee/pages/employee-change-approver/employee-change-approver.component.ts","./src/app/modules/employee/pages/employee-creation/employee-creation.component.css","./src/app/modules/employee/pages/employee-creation/employee-creation.component.ts","./src/app/modules/employee/pages/employee-edit/employee-edit.component.css","./src/app/modules/employee/pages/employee-edit/employee-edit.component.ts","./src/app/modules/employee/pages/employee-list/employee-list.component.css","./src/app/modules/employee/pages/employee-list/employee-list.component.ts","./src/app/modules/employee/pages/employee-reset-pw/employee-reset-pw.component.css","./src/app/modules/employee/pages/employee-reset-pw/employee-reset-pw.component.ts","./src/app/modules/employee/pages/employee-view/employee-view.component.css","./src/app/modules/employee/pages/employee-view/employee-view.component.ts"],"names":[],"mappings":"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","file":"modules-employee-employee-module-es2015.js","sourcesContent":["export default \"<div class=\\\"dropdown-divider  my-3\\\"></div>\\n\\n<h5 class=\\\"my-3\\\">Employee Information</h5>\\n\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n        <!-- first name -->\\n        <div class=\\\"input-group \\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">First Name</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empFirstName\\\" [readOnly]=\\\"mode ==='read'\\\">\\n\\n        </div>\\n        <span *ngIf=\\\"alerts.firstName\\\" class=\\\"error my-2\\\"><small>{{alerts.firstName.msg}}</small></span>\\n\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- last name -->\\n        <div class=\\\"input-group \\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Last Name</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empLastName\\\" [readOnly]=\\\"mode ==='read'\\\">\\n        </div>\\n        <span *ngIf=\\\"alerts.lastName\\\" class=\\\"error my-2\\\"><small>{{alerts.lastName.msg}}</small></span>\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- user name -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">User Name</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empUsername\\\" (blur)=\\\"onExitUserName()\\\"\\n                [readOnly]=\\\"mode ==='read' || mode=='update'\\\">\\n        </div>\\n\\n    </div>\\n    <div class=\\\"col-1\\\">\\n        <div *ngIf=\\\"(mode ==='create' || mode ==='update')\\\">\\n            <i *ngIf=\\\"validUsername\\\" class=\\\"material-icons pass my-2\\\">check_circle</i>\\n            <i *ngIf=\\\"!validUsername\\\" class=\\\"material-icons error  my-2\\\">error</i>\\n        </div>\\n    </div>\\n    <div class=\\\"col-5\\\">\\n        <!-- password -->\\n        <div class=\\\"input-group\\\" *ngIf=\\\"mode==='create'\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Password</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empPassword\\\" [readOnly]=\\\"true\\\">\\n        </div>\\n        <button *ngIf=\\\"mode==='update'\\\" type=\\\"button\\\" class=\\\"btn btn-outline-secondary  m-1 px-3\\\"\\n            (click)=\\\"onRestPw()\\\">Reset\\n            Password</button>\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n        <!-- employe ID -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Employee ID</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empCode\\\" (blur)=\\\"onExitEmployeeId()\\\"\\n                [readOnly]=\\\"mode ==='read' || mode=='update'\\\">\\n        </div>\\n\\n    </div>\\n    <div class=\\\"col-1\\\">\\n        <div *ngIf=\\\"(mode ==='create' || mode ==='update')\\\">\\n            <i *ngIf=\\\"validEmployeeCode\\\" class=\\\"material-icons pass my-2\\\">check_circle</i>\\n            <i *ngIf=\\\"!validEmployeeCode\\\" class=\\\"material-icons error  my-2\\\">error</i>\\n        </div>\\n    </div>\\n    <div class=\\\"col-6\\\"></div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- labour grade -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Labour Grade</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{employee.labourGrade.labourGradeName}}\\\"\\n                *ngIf=\\\"mode==='read'\\\" [readOnly]=\\\"true\\\">\\n            <p-dropdown class=\\\"form-control\\\" [options]=\\\"greadeDropdown\\\" [(ngModel)]=\\\"selectedGrade\\\"\\n                *ngIf=\\\"mode ==='create' || mode==='update'\\\"\\n                placeholder=\\\"{{employee.labourGrade ? employee.labourGrade.labourGradeName : 'choose a Labour Grade'}}\\\"\\n                optionLabel=\\\"label\\\" [style]=\\\"{'border-width':'0px','padding':'0px','width':'100%'}\\\"></p-dropdown>\\n        </div>\\n        <span *ngIf=\\\"alerts.labourGrade\\\" class=\\\"error my-2\\\"><small>{{alerts.labourGrade.msg}}</small></span>\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- supervisor -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Supervisor</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                value=\\\"{{employee.supervisor.empFirstName}} {{employee.supervisor.empLastName}}\\\" *ngIf=\\\"mode==='read'\\\"\\n                [readOnly]=\\\"true\\\">\\n            <p-dropdown class=\\\"form-control\\\" [options]=\\\"employeeDropdown\\\" [(ngModel)]=\\\"selectedSupervisor\\\"\\n                *ngIf=\\\"mode ==='create' || mode==='update'\\\"\\n                placeholder=\\\"{{employee.supervisor ? employee.supervisor.empFirstName + ' ' + employee.supervisor.empLastName : 'choose a supervisor'}}\\\"\\n                optionLabel=\\\"label\\\" [style]=\\\"{'border-width':'0px','padding':'0px','width':'100%'}\\\"></p-dropdown>\\n        </div>\\n        <span *ngIf=\\\"alerts.supervisor\\\" class=\\\"error my-2\\\"><small>{{alerts.supervisor.msg}}</small></span>\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n\\n<div class=\\\"dropdown-divider  my-3\\\"></div>\\n<h5 class=\\\"my-3\\\">Activation</h5>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n        <!-- active/deactive -->\\n        <div class=\\\"input-group\\\">\\n            <!-- <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Activation</span>\\n                    </div> -->\\n            <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n                <label\\n                    [className]=\\\"employee.isActivated ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"radio\\\" name=\\\"activation\\\" id=\\\"active\\\" [value]=true [(ngModel)]=\\\"employee.isActivated\\\"\\n                        [disabled]=\\\"mode==='read'\\\">\\n                    Active\\n                </label>\\n                <label\\n                    [className]=\\\"employee.isActivated ? 'btn btn-outline-secondary' : 'btn btn-outline-secondary active'\\\">\\n                    <!--  [className]=\\\"employee.isActivated ? 'btn btn-outline-secondary' : 'btn btn-outline-secondary active'\\\" -->\\n                    <input type=\\\"radio\\\" name=\\\"activation\\\" id=\\\"deactive\\\" [value]=false [(ngModel)]=\\\"employee.isActivated\\\"\\n                        [disabled]=\\\"mode==='read'\\\"> Deactive\\n                </label>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<div class=\\\" my-3\\\"></div>\\n<div class=\\\"dropdown-divider  my-3\\\"></div>\\n<h5 class=\\\"my-3\\\">Permissions</h5>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n        <!-- permission -->\\n        <div class=\\\"input-group\\\">\\n            <!-- <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Permissions</span>\\n                    </div> -->\\n            <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n                <label\\n                    [className]=\\\"employee.isAdmin ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"checkbox\\\" autocomplete=\\\"off\\\" [value]=\\\"!employee.isAdmin\\\" [disabled]=\\\"mode==='read'\\\"\\n                        [(ngModel)]=\\\"employee.isAdmin\\\">\\n                    Administrator Permission\\n                </label>\\n                <label\\n                    [className]=\\\"employee.isProjectManager ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"checkbox\\\" autocomplete=\\\"off\\\" [value]=\\\"!employee.isProjectManager\\\"\\n                        [disabled]=\\\"mode==='read'\\\" [(ngModel)]=\\\"employee.isProjectManager\\\"> PM/EM?? Manager\\n                    Permission\\n                </label>\\n                <label\\n                    [className]=\\\"employee.isHumanResources ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"checkbox\\\" autocomplete=\\\"off\\\" [value]=\\\"!employee.isHumanResources \\\"\\n                        [disabled]=\\\"mode==='read'\\\" [(ngModel)]=\\\"employee.isHumanResources\\\"> Humane Resource Permission\\n                </label>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"display-4\\\">Chanage Timesheet Approver</h3>\\n        <div class=\\\"dropdown-divider \\\"></div>\\n        <p class=\\\"lead\\\">The table below lists all your employees that you supervise.</p>\\n\\n        <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"displayEmployee\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n            [style]=\\\"{'text-align':'center'}\\\">\\n            <ng-template pTemplate=\\\"caption\\\">\\n                <div>\\n                    <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                    <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\n                        (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\n                </div>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\n                <tr>\\n                    <th style=\\\"width: 120px;\\\">Employee ID</th>\\n                    <th>Employee Name</th>\\n                    <th>Approver</th>\\n                    <th>Activation</th>\\n                    <th style=\\\"width: 250px;\\\"></th>\\n                </tr>\\n                <tr>\\n                    <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n                        <input *ngSwitchCase=\\\"'empCode'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empName'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empUsername'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'approverName'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n                <tr [pSelectableRow]=\\\"rowData\\\">\\n                    <td *ngFor=\\\"let col of columns\\\">\\n                        <span *ngIf=\\\"col.field !=='activation' && col.field !=='button'\\\">{{rowData[col.field]}}</span>\\n                        <h5 *ngIf=\\\"col.field ==='activation'\\\">\\n                            <span class=\\\"badge badge-success\\\" *ngIf=\\\"rowData[col.field]\\\">Activated</span>\\n                            <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!rowData[col.field]\\\">Deactivated</span>\\n                        </h5>\\n                        <div *ngIf=\\\"col.field ==='button'\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\"\\n                                (click)=\\\"openModal(rowData[employeeId],template)\\\">Change Timesheet Approver</button>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</div>\\n\\n<!-- rest pw confirmation window -->\\n<ng-template #template>\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Change Timesheet Approver</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <span class=\\\"lead\\\">Employee Information</span>\\n        <table class=\\\"container\\\">\\n            <tr class=\\\"row\\\">\\n                <td class=\\\"col-6\\\"><strong>Employee Name:</strong>\\n                    {{selectedEmp.empFirstName}} {{selectedEmp.empLastName}}</td>\\n                <td class=\\\"col-6\\\"><strong>Employee Id:</strong>\\n                    {{selectedEmp.employeeId}}</td>\\n            </tr>\\n        </table>\\n        <div class=\\\"dropdown-divider \\\"></div>\\n        <span class=\\\"lead\\\">New Timesheet Approver</span>\\n        <p-dropdown [options]=\\\"employeeDropdown\\\" [(ngModel)]=\\\"selectedEmp.timesheetApprover\\\" filter=\\\"true\\\"\\n            placeholder=\\\"{{selectedEmp.timesheetApprover ? (selectedEmp.timesheetApprover.empFirstName + ' ' + selectedEmp.timesheetApprover.empLastName) : 'choose an employee'}}\\\"\\n            optionLabel=\\\"label\\\" [style]=\\\"{'padding':'0px','width':'100%'}\\\"></p-dropdown>\\n    </div>\\n\\n    <!-- 'border-width':'0px', -->\\n\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary  m-1 px-3\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger  m-1 px-3\\\" (click)=\\\"onSaveChange()\\\">Save Change</button>\\n    </div>\\n</ng-template>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <!-- Title -->\\n        <h3 class=\\\"display-4\\\">Create Employee</h3>\\n        <!-- alert -->\\n        <shared-alertPromp [alerts]=\\\"alerts\\\"></shared-alertPromp>\\n\\n\\n        <app-employee [employee]=\\\"employee\\\" [mode]=\\\"mode\\\" [validUsername]=\\\"validUsername\\\"\\n            (changeEmpCode)=\\\"validateEmployeeCode()\\\" (changeUsername)=\\\"validateUserName()\\\"\\n            [validEmployeeCode]=\\\"validEmployeeCode\\\" [alerts]=\\\"alerts\\\"></app-employee>\\n\\n        <!-- Action section-->\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n        <div class=\\\"d-flex flex-row-reverse\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary  m-1 px-3\\\" (click)=\\\"onCreate($event)\\\">Create</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary m-1 px-2\\\" (click)=\\\"onCancel($event)\\\">Cancel</button>\\n        </div>\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n    </div>\\n\\n\\n</div>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <!-- Title -->\\n        <h3 class=\\\"display-4\\\">Employee Edit</h3>\\n        <!-- alert -->\\n        <shared-alertPromp [alerts]=\\\"alerts\\\"></shared-alertPromp>\\n\\n        <app-employee [employee]=\\\"employee\\\" [mode]=\\\"mode\\\" [alerts]=\\\"alerts\\\" *ngIf=\\\"employee\\\"\\n            [validUsername]=\\\"validUsername\\\" [validEmployeeCode]=\\\"validEmployeeCode\\\" (restPw)=\\\"openModal(template)\\\">\\n        </app-employee>\\n\\n\\n        <!-- Action section-->\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n        <div class=\\\"d-flex flex-row-reverse\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary  m-1 px-3\\\" (click)=\\\"onUpdate()\\\">Update</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary m-1 px-2\\\" (click)=\\\"onCancel($event)\\\">Cancel</button>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<!-- rest pw confirmation window -->\\n<ng-template #template *ngIf=\\\"selectedEmp\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Reset {{employee.empFirstName}}'s Password</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Are you sure reset the password of <strong> {{employee.empFirstName}} {{employee.empLastName}} </strong> to\\n        default?\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary  m-1 px-3\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger  m-1 px-3\\\" (click)=\\\"resetPw()\\\">Reset</button>\\n    </div>\\n</ng-template>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"display-4\\\">Employee List</h3>\\n        <div class=\\\"dropdown-divider \\\"></div>\\n\\n        <div class=\\\"d-flex flex-row-reverse\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary my-2\\\" routerLink=\\\"creation\\\">Create</button>\\n        </div>\\n\\n        <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"displayEmployee\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n            [style]=\\\"{'text-align':'center'}\\\">\\n            <ng-template pTemplate=\\\"caption\\\">\\n                <div style=\\\"text-align: right\\\">\\n                    <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                    <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\n                        (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\n                </div>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\n                <tr>\\n                    <th *ngFor=\\\"let col of columns\\\">\\n                        {{col.header}}\\n                    </th>\\n                </tr>\\n                <tr>\\n                    <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n                        <input *ngSwitchCase=\\\"'empCode'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empName'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empUsername'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'supervisorName'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'approverName'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n                <tr [pSelectableRow]=\\\"rowData\\\">\\n                    <td *ngFor=\\\"let col of columns\\\">\\n                        <span *ngIf=\\\"col.field !=='activation' && col.field !=='button'\\\">{{rowData[col.field]}}</span>\\n                        <h5 *ngIf=\\\"col.field ==='activation'\\\">\\n                            <span class=\\\"badge badge-success\\\" *ngIf=\\\"rowData[col.field]\\\">Activated</span>\\n                            <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!rowData[col.field]\\\">Deactivated</span>\\n                        </h5>\\n                        <div *ngIf=\\\"col.field ==='button'\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\"\\n                                [routerLink]=\\\"['view', rowData.employeeId]\\\">View</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\"\\n                                [routerLink]=\\\"['edit', rowData.employeeId]\\\">Edit</button>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</div>\"","export default \"<div class=\\\"d-flex justify-content-center align-items-center height70vh\\\">\\n    <div class=\\\"card\\\" style=\\\"width:400px\\\">\\n        <h4 class=\\\"card-header\\\">Change Your Password</h4>\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"changPwForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" readonly />\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Old Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Old Password is required</div>\\n                        <div *ngIf=\\\"f.password.errors.minLength\\\">minLength Password is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"passwordNew\\\">New Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"passwordNew\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.passwordNew.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.passwordNew.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.passwordNew.errors.required\\\">New Password is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"passwordNewRe\\\">Confirm New Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"passwordNewRe\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.passwordNewRe.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.passwordNewRe.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.passwordNewRe.errors.required\\\">Confirm Password is required</div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"changPwForm.errors?.passwordMatch && (changPwForm.touched || changPwForm.dirty)\\\"\\n                    class=\\\"cross-validation-error-message alert alert-danger\\\">\\n                    New Password is not matched.\\n                </div>\\n\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary  m-1 px-3\\\"\\n                    routerLink=\\\"/content/dashboard\\\">Cancel</button>\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    Submit\\n                </button>\\n                <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error.message}}</div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <!-- Title -->\\n        <h3 class=\\\"display-4\\\">Employee</h3>\\n\\n        <app-employee [employee]=\\\"employee\\\" [mode]=\\\"mode\\\" [alerts]=\\\"alerts\\\" *ngIf=\\\"employee\\\"></app-employee>\\n\\n        <!-- Action section-->\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n\\n    </div>\\n\\n\\n</div>\"","export default \".pass{\\n    color:green;\\n    font-style: normal;\\n}\\n.error{\\n    color:red;\\n    font-style: normal;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9lbXBsb3llZS9jb21wb25lbnQvZW1wbG95ZWUvZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFNBQVM7SUFDVCxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2VtcGxveWVlL2NvbXBvbmVudC9lbXBsb3llZS9lbXBsb3llZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhc3N7XG4gICAgY29sb3I6Z3JlZW47XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuLmVycm9ye1xuICAgIGNvbG9yOnJlZDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59Il19 */\"","import { Component, OnInit, TemplateRef, Input, Output, EventEmitter } from '@angular/core';\nimport { SelectItem } from 'primeng/api/selectitem';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { MODE } from 'src/app/shared/model/MODE';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  @Input() employee: Employee;\n  @Input() mode: MODE;\n  greadeDropdown: SelectItem[] = null;\n  employeeDropdown: SelectItem[] = null;\n  selectedGrade: SelectItem;\n  selectedSupervisor: SelectItem;\n  // userName validation\n  @Input() validUsername: boolean;\n  @Input() validEmployeeCode: boolean;\n  @Input() alerts;\n  @Output() restPw: EventEmitter<string> = new EventEmitter<string>();\n  @Output() changeUsername: EventEmitter<string> = new EventEmitter<string>();\n  @Output() changeEmpCode: EventEmitter<string> = new EventEmitter<string>();\n\n\n  constructor(\n    private employeeService: EmployeeService,\n  ) { }\n\n  ngOnInit() {\n    if (this.mode !== MODE.Read) this.populateEmployeeDropdown();\n    if (this.mode !== MODE.Read) this.populateLabourGradeDropdown();\n\n  }\n  populateLabourGradeDropdown() {\n    this.employeeService\n      .getLabourGrades()\n      .subscribe(greades => {\n        this.greadeDropdown = [];\n        console.log(greades);\n        greades.forEach(g => {\n          console.log(g);\n          this.greadeDropdown.push(\n            { label: `${g.labourGradeName}`, value: g.labourGradeId }\n          );\n        })\n        console.log(this.greadeDropdown);\n      })\n  }\n\n  populateEmployeeDropdown() {\n    this.employeeService\n      .getEmployees()\n      .subscribe(employees => {\n        this.employeeDropdown = [];\n        console.log(employees);\n        employees.forEach(e => {\n          console.log(e);\n          this.employeeDropdown.push(\n            { label: `${e.empFirstName} ${e.empLastName}`, value: e.employeeId }\n          );\n        })\n        console.log(this.employeeDropdown);\n      })\n  }\n\n  // exit event of emp id field\n  onExitEmployeeId() {\n    this.changeEmpCode.emit('payload');\n  }\n\n  // exit event of user name\n  onExitUserName() {\n    this.changeUsername.emit('payload');\n  }\n\n  // click reset password btn\n  onRestPw() {\n    this.restPw.emit('payload');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeCreationComponent } from './pages/employee-creation/employee-creation.component';\nimport { EmployeeListComponent } from './pages/employee-list/employee-list.component';\nimport { EmployeeViewComponent } from './pages/employee-view/employee-view.component';\nimport { EmployeeEditComponent } from './pages/employee-edit/employee-edit.component';\nimport { EmployeeChangeApproverComponent } from './pages/employee-change-approver/employee-change-approver.component';\nimport { EmployeeResetPWComponent } from './pages/employee-reset-pw/employee-reset-pw.component';\n\n\nconst routes: Routes = [\n  { path: '', component: EmployeeListComponent, data: { breadcrumb: null } },\n  { path: 'changePassword', component: EmployeeResetPWComponent, data: { breadcrumb: 'Change Password' } },\n  { path: 'supervisor/changeTimesheetApprover', component: EmployeeChangeApproverComponent, data: { breadcrumb: 'Change Timesheet Approver' } },\n  { path: 'view/:empId', component: EmployeeViewComponent, data: { breadcrumb: 'Employee View' } },\n  { path: 'edit/:empId', component: EmployeeEditComponent, data: { breadcrumb: 'Employee Edit' } },\n  { path: 'creation', component: EmployeeCreationComponent, data: { breadcrumb: 'Employee Creation' } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { EmployeeCreationComponent } from './pages/employee-creation/employee-creation.component';\n\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { AlertModule } from 'ngx-bootstrap';\nimport { EmployeeComponent } from './component/employee/employee.component';\nimport { EmployeeListComponent } from './pages/employee-list/employee-list.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { EmployeeViewComponent } from './pages/employee-view/employee-view.component';\nimport { EmployeeEditComponent } from './pages/employee-edit/employee-edit.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\n\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { EmployeeChangeApproverComponent } from './pages/employee-change-approver/employee-change-approver.component';\nimport { EmployeeResetPWComponent } from './pages/employee-reset-pw/employee-reset-pw.component';\n\n@NgModule({\n  declarations: [\n    EmployeeComponent,\n    EmployeeCreationComponent,\n    EmployeeListComponent,\n    EmployeeViewComponent,\n    EmployeeEditComponent,\n    EmployeeChangeApproverComponent,\n    EmployeeResetPWComponent,\n  ],\n  imports: [\n    CommonModule,\n    EmployeeRoutingModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule,\n\n    //material\n    MatButtonToggleModule,\n\n    //primeng\n    DropdownModule,\n    TableModule,\n    InputTextModule,\n    DialogModule,\n    ButtonModule,\n\n    ToastModule,\n    MessagesModule,\n    MessageModule,\n\n    // bootstrap\n    AlertModule.forRoot(),\n    ModalModule.forRoot(),\n    NgbModule,\n  ],\n\n})\nexport class EmployeeModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtY2hhbmdlLWFwcHJvdmVyL2VtcGxveWVlLWNoYW5nZS1hcHByb3Zlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { SelectItem } from 'primeng/api/selectitem';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { MyToastService } from 'src/app/core/service/my-toast.service';\n\n@Component({\n  selector: 'app-employee-change-approver',\n  templateUrl: './employee-change-approver.component.html',\n  styleUrls: ['./employee-change-approver.component.css']\n})\nexport class EmployeeChangeApproverComponent implements OnInit {\n\n\n  displayEmployee: any[] = [];\n  selectedEmp: Employee = null;\n  cols: any[];\n  employeeDropdown: SelectItem[] = null;\n  modalRef: BsModalRef;\n\n  constructor(\n    private employeeService: EmployeeService,\n    private modalService: BsModalService,\n    private myToastService: MyToastService,\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n    this.initEmployees();\n    this.initCols();\n    this.populateEmployeeDropdown();\n  }\n\n  initEmployees() {\n    this.employeeService.getAllChildrenEmployees(this.authService.currentUserValue.employeeId).subscribe(res => {\n      console.log(res);\n      res.forEach(i => {\n        console.log(i)\n        this.displayEmployee.push(\n          {\n            \"employeeId\": i.employeeId,\n            \"empCode\": i.empCode,\n            \"empName\": `${i.empFirstName} ${i.empLastName}`,\n            'approverName': `${i.timesheetApprover.empFirstName} ${i.timesheetApprover.empLastName}`,\n            'activation': i.isActivated,\n          }\n        );\n      })\n      console.log(this.displayEmployee)\n    });\n  }\n  initCols() {\n    this.cols = [\n      { field: 'empCode', header: 'Employee ID' },\n      { field: 'empName', header: 'Employee Name' },\n      { field: 'approverName', header: 'Approver' },\n      { field: 'activation', header: 'Activation' },\n      { field: 'button', header: '' },\n    ]\n  }\n\n  populateEmployeeDropdown() {\n    this.employeeService\n      .getEmployees()\n      .subscribe(employees => {\n        this.employeeDropdown = [];\n        // this.employeeDropdown.push({ label: `-----`, value: null });\n        employees.forEach(e => {\n          this.employeeDropdown.push(\n            { label: `${e.empFirstName} ${e.empLastName}`, value: e }\n          );\n        })\n        console.log(this.employeeDropdown);\n      })\n  }\n\n  openModal(id, template: TemplateRef<any>) {\n    console.log(id)\n    this.employeeService.getEmployee(id).subscribe(emp => {\n      this.selectedEmp = emp;\n      this.modalRef = this.modalService.show(template);\n    })\n  }\n\n  onSaveChange() {\n    this.employeeService.putEmployee(this.selectedEmp).subscribe(_ => {\n      this.modalRef.hide();\n      this.myToastService.addSuccess('Successfully changed Timesheet Approver', `${new Date().toLocaleString()}`);\n    })\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtY3JlYXRpb24vZW1wbG95ZWUtY3JlYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, TemplateRef, Pipe, PipeTransform } from '@angular/core';\nimport { SelectItem } from 'primeng/api/selectitem';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { Alert } from 'src/app/shared/model/Alert';\nimport { MODE } from 'src/app/shared/model/MODE';\n\n@Component({\n  selector: 'app-employee-creation',\n  templateUrl: './employee-creation.component.html',\n  styleUrls: ['./employee-creation.component.css']\n})\nexport class EmployeeCreationComponent implements OnInit {\n\n  employee: Employee;\n  grade: SelectItem[] = null;\n  employeeDropdown: SelectItem[] = null;\n  selectedGrade: SelectItem;\n  selectedSupervisor: SelectItem;\n  // userName validation\n  validUsername: boolean = false;\n  validEmployeeCode: boolean = false;\n  alerts = {};\n  mode = MODE.Create;\n\n  constructor(\n    private employeeService: EmployeeService,\n  ) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n    this.employee.isActivated = true;\n    this.employee.empPassword = \"01234\";\n  }\n\n  // btn click event of creation\n  onCreate(e: any) {\n    if (!this.validatePage())\n      return;\n    console.log(\"POST employee\");\n    console.log(JSON.stringify(this.employee));\n    this.employeeService.postEmployee(this.employee).subscribe();\n  }\n\n  // btn click event of cancel\n  onCancel(e: any) { }\n\n  validatePage(): boolean {\n    var result = true;\n    if (!this.employee.empFirstName === null || this.employee.empFirstName.match(/^ *$/) !== null) {\n      this.alerts['firstName'] = new Alert('danger', 5000, `First Name cannot be empty`);\n      result = false;\n    }\n    if (!this.employee.empLastName === null || this.employee.empLastName.match(/^ *$/) !== null) {\n      this.alerts['lastName'] = new Alert('danger', 5000, `Last Name cannot be empty`);\n      result = false;\n    }\n    if (!this.validUsername) {\n      this.alerts['userName'] = new Alert('danger', 5000, `User Name: ${this.employee.empUsername} is not allowed`);\n      result = false;\n    }\n    if (!this.validEmployeeCode) {\n      this.alerts['employeeCode'] = new Alert('danger', 5000, `Employee ID : ${this.employee.empCode} is not allowed`);\n      result = false;\n    }\n    return result;\n  }\n  displayErrorMsg(fieldName: string) {\n    return (this.alerts[fieldName] != '') ? this.alerts[fieldName].msg : null;\n  }\n\n\n\n  // exit event of emp id field\n  validateEmployeeCode() {\n    this.employeeService.checkUserEmployeeCodeOK(this.employee.empCode)\n      .subscribe(response => {\n        console.log(response);\n        this.validEmployeeCode = response;\n      });\n  }\n\n  // exit event of user name\n  validateUserName() {\n    this.employeeService.checkUserNameOK(this.employee.empUsername)\n      .subscribe(response => {\n        console.log(response);\n        this.validUsername = response;\n      })\n\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtZWRpdC9lbXBsb3llZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { MODE } from 'src/app/shared/model/MODE';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { Alert } from 'src/app/shared/model/Alert';\nimport { MyToastService } from 'src/app/core/service/my-toast.service';\n\n\n\n@Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css'],\n})\nexport class EmployeeEditComponent implements OnInit {\n\n  employee: Employee;\n  mode = MODE.Update;\n  alerts = {};\n  modalRef: BsModalRef;\n  validUsername: boolean = true;\n  validEmployeeCode: boolean = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private employeeService: EmployeeService,\n    private modalService: BsModalService,\n    private myToastService: MyToastService,\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      var id = params.get('empId');\n      this.employeeService.getEmployee(id).subscribe(e => this.employee = e);\n    });\n  }\n\n  openModal(template: TemplateRef<any>) {\n    console.log('opne')\n    console.log(template)\n    this.modalRef = this.modalService.show(template);\n  }\n  resetPw() {\n    this.employee.empPassword = '01234';\n    this.employeeService.getEmployee(this.employee.employeeId).subscribe(emp => {\n      emp.empPassword = '01234';\n      this.employeeService.putEmployee(emp);\n      this.modalRef.hide();\n      this.myToastService.addSuccess('Password Changed', 'Reset to defaul password.');\n\n    })\n    //TODO: SHOW MESSAGE.\n  }\n  // btn click event of creation\n  onUpdate() {\n    if (!this.validatePage())\n      return;\n    console.log(\"POST employee\");\n    console.log(JSON.stringify(this.employee));\n    this.employeeService.postEmployee(this.employee).subscribe(_ => {\n      this.myToastService.addSuccess('Update successfully', `${this.employee.empFirstName + ' ' + this.employee.empLastName} is updated.`);\n      this.router.navigate([`/content/employees/view/${this.employee.employeeId}`]);\n    });\n  }\n\n  // btn click event of cancel\n  onCancel(e: any) {\n    this.router.navigate([`/content/employees`]);\n  }\n\n  validatePage(): boolean {\n    var result = true;\n    if (!this.employee.empFirstName === null || this.employee.empFirstName.match(/^ *$/) !== null) {\n      this.alerts['firstName'] = new Alert('danger', 5000, `First Name cannot be empty`);\n      result = false;\n    }\n    if (!this.employee.empLastName === null || this.employee.empLastName.match(/^ *$/) !== null) {\n      this.alerts['lastName'] = new Alert('danger', 5000, `Last Name cannot be empty`);\n      result = false;\n    }\n    if (!this.validUsername) {\n      this.alerts['userName'] = new Alert('danger', 5000, `User Name: ${this.employee.empUsername} is not allowed`);\n      result = false;\n    }\n    if (!this.validEmployeeCode) {\n      this.alerts['employeeCode'] = new Alert('danger', 5000, `Employee ID : ${this.employee.empCode} is not allowed`);\n      result = false;\n    }\n    return result;\n  }\n\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtbGlzdC9lbXBsb3llZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  displayEmployee: any[] = [];\n  cols: any[];\n\n  constructor(\n    private employeeService: EmployeeService\n  ) { }\n\n  ngOnInit() {\n    this.initEmployees();\n    this.initCols();\n  }\n\n  initEmployees() {\n    this.employeeService.getEmployees().subscribe(res => {\n      console.log(res);\n      res.forEach(i => {\n        console.log(i)\n        this.displayEmployee.push(\n          {\n            \"employeeId\": i.employeeId,\n            \"empCode\": i.empCode,\n            \"empName\": `${i.empFirstName} ${i.empLastName}`,\n            \"empUsername\": i.empUsername,\n            'supervisorName': `${i.supervisor.empFirstName} ${i.supervisor.empLastName}`,\n            'approverName': `${i.timesheetApprover.empFirstName} ${i.timesheetApprover.empLastName}`,\n            'activation': i.isActivated,\n          }\n        );\n      })\n      console.log(this.displayEmployee)\n    });\n  }\n  initCols() {\n    this.cols = [\n      { field: 'empCode', header: 'Employee ID' },\n      { field: 'empName', header: 'Employee Name' },\n      { field: 'empUsername', header: 'User Name' },\n      { field: 'supervisorName', header: 'Supervisor' },\n      { field: 'approverName', header: 'Approver' },\n      { field: 'activation', header: 'Activation' },\n      { field: 'button', header: '' },\n    ]\n  }\n\n}\n","export default \".height70vh{\\n    height: 70vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9lbXBsb3llZS9wYWdlcy9lbXBsb3llZS1yZXNldC1wdy9lbXBsb3llZS1yZXNldC1wdy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtcmVzZXQtcHcvZW1wbG95ZWUtcmVzZXQtcHcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWlnaHQ3MHZoe1xuICAgIGhlaWdodDogNzB2aDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-employee-reset-pw',\n  templateUrl: './employee-reset-pw.component.html',\n  styleUrls: ['./employee-reset-pw.component.css']\n})\nexport class EmployeeResetPWComponent implements OnInit {\n\n  changPwForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = null;\n\n  currentUserId: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n    this.changPwForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      passwordNew: ['', Validators.required],\n      passwordNewRe: ['', Validators.required],\n    },\n      { validator: passwordMatch }\n    );\n    this.currentUserId = this.authenticationService.currentUserValue.credentialId;\n    this.f.username.setValue(this.currentUserId);\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.changPwForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.changPwForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.authenticationService\n      .changePW(this.currentUserId, this.f.password.value, this.f.passwordNew.value)\n      .subscribe(\n        result => {\n          if (result) {\n            this.authenticationService.logout();\n          }\n          if (!result) {\n            this.error = 'We cannot change your Password. Please Make sure your old password is correct.'\n          }\n        },\n        error => {\n          console.log(error);\n          this.error = error.error;\n          this.loading = false;\n        }\n      )\n  }\n\n}\n\n// export function passwordMatch(newPw:string): ValidatorFn {\n//   return (control: AbstractControl): {[key: string]: any} | null => {\n//     const result = (newPw===control.value);\n//     return result ? {'passwordMatch': {value: control.value}} : null;\n//   };\n// }\n\nexport const passwordMatch: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n  const pw = control.get('passwordNew');\n  const pwRe = control.get('passwordNewRe');\n\n  return pw && pwRe && pw.value === pwRe.value ? null : { 'passwordMatch': true };\n};","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtdmlldy9lbXBsb3llZS12aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { MODE } from 'src/app/shared/model/MODE';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-view',\n  templateUrl: './employee-view.component.html',\n  styleUrls: ['./employee-view.component.css']\n})\nexport class EmployeeViewComponent implements OnInit {\n\n\n  employee: Employee;\n  mode = MODE.Read;\n  alerts = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private employeeService: EmployeeService,\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      var id = params.get('empId');\n      this.employeeService.getEmployee(id).subscribe(e => this.employee = e);\n    });\n\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///"}