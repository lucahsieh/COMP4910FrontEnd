{"version":3,"sources":["src/app/modules/employee/component/employee/employee.component.html","src/app/modules/employee/pages/employee-change-approver/employee-change-approver.component.html","src/app/modules/employee/pages/employee-creation/employee-creation.component.html","src/app/modules/employee/pages/employee-edit/employee-edit.component.html","src/app/modules/employee/pages/employee-list/employee-list.component.html","src/app/modules/employee/pages/employee-reset-pw/employee-reset-pw.component.html","src/app/modules/employee/pages/employee-view/employee-view.component.html","src/app/modules/employee/component/employee/employee.component.css","src/app/modules/employee/component/employee/employee.component.ts","src/app/modules/employee/employee-routing.module.ts","src/app/modules/employee/employee.module.ts","src/app/modules/employee/pages/employee-change-approver/employee-change-approver.component.css","src/app/modules/employee/pages/employee-change-approver/employee-change-approver.component.ts","src/app/modules/employee/pages/employee-creation/employee-creation.component.css","src/app/modules/employee/pages/employee-creation/employee-creation.component.ts","src/app/modules/employee/pages/employee-edit/employee-edit.component.css","src/app/modules/employee/pages/employee-edit/employee-edit.component.ts","src/app/modules/employee/pages/employee-list/employee-list.component.css","src/app/modules/employee/pages/employee-list/employee-list.component.ts","src/app/modules/employee/pages/employee-reset-pw/employee-reset-pw.component.css","src/app/modules/employee/pages/employee-reset-pw/employee-reset-pw.component.ts","src/app/modules/employee/pages/employee-view/employee-view.component.css","src/app/modules/employee/pages/employee-view/employee-view.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"dropdown-divider  my-3\\\"></div>\\n\\n<h5 class=\\\"my-3\\\">Employee Information</h5>\\n\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n        <!-- first name -->\\n        <div class=\\\"input-group \\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">First Name</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empFirstName\\\" [readOnly]=\\\"mode ==='read'\\\">\\n\\n        </div>\\n        <span *ngIf=\\\"alerts.firstName\\\" class=\\\"error my-2\\\"><small>{{alerts.firstName.msg}}</small></span>\\n\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- last name -->\\n        <div class=\\\"input-group \\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Last Name</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empLastName\\\" [readOnly]=\\\"mode ==='read'\\\">\\n        </div>\\n        <span *ngIf=\\\"alerts.lastName\\\" class=\\\"error my-2\\\"><small>{{alerts.lastName.msg}}</small></span>\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- user name -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">User Name</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empUsername\\\" (blur)=\\\"onExitUserName()\\\"\\n                [readOnly]=\\\"mode ==='read' || mode=='update'\\\">\\n        </div>\\n\\n    </div>\\n    <div class=\\\"col-1\\\">\\n        <div *ngIf=\\\"(mode ==='create' || mode ==='update')\\\">\\n            <i *ngIf=\\\"validUsername\\\" class=\\\"material-icons pass my-2\\\">check_circle</i>\\n            <i *ngIf=\\\"!validUsername\\\" class=\\\"material-icons error  my-2\\\">error</i>\\n        </div>\\n    </div>\\n    <div class=\\\"col-5\\\">\\n        <!-- password -->\\n        <div class=\\\"input-group\\\" *ngIf=\\\"mode==='create'\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Password</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empPassword\\\" [readOnly]=\\\"true\\\">\\n        </div>\\n        <button *ngIf=\\\"mode==='update'\\\" type=\\\"button\\\" class=\\\"btn btn-outline-secondary  m-1 px-3\\\"\\n            (click)=\\\"onRestPw()\\\">Reset\\n            Password</button>\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n        <!-- employe ID -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Employee ID</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empCode\\\" (blur)=\\\"onExitEmployeeId()\\\"\\n                [readOnly]=\\\"mode ==='read' || mode=='update'\\\">\\n        </div>\\n\\n    </div>\\n    <div class=\\\"col-1\\\">\\n        <div *ngIf=\\\"(mode ==='create' || mode ==='update')\\\">\\n            <i *ngIf=\\\"validEmployeeCode\\\" class=\\\"material-icons pass my-2\\\">check_circle</i>\\n            <i *ngIf=\\\"!validEmployeeCode\\\" class=\\\"material-icons error  my-2\\\">error</i>\\n        </div>\\n    </div>\\n    <div class=\\\"col-6\\\"></div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- labour grade -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Labour Grade</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{employee.labourGrade.labourGradeName}}\\\"\\n                *ngIf=\\\"mode==='read'\\\" [readOnly]=\\\"true\\\">\\n            <p-dropdown class=\\\"form-control\\\" [options]=\\\"greadeDropdown\\\" [(ngModel)]=\\\"selectedGrade\\\"\\n                *ngIf=\\\"mode ==='create' || mode==='update'\\\"\\n                placeholder=\\\"{{employee.labourGrade ? employee.labourGrade.labourGradeName : 'choose a Labour Grade'}}\\\"\\n                optionLabel=\\\"label\\\" [style]=\\\"{'border-width':'0px','padding':'0px','width':'100%'}\\\"></p-dropdown>\\n        </div>\\n        <span *ngIf=\\\"alerts.labourGrade\\\" class=\\\"error my-2\\\"><small>{{alerts.labourGrade.msg}}</small></span>\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n    <div class=\\\"col-5\\\">\\n\\n        <!-- supervisor -->\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Supervisor</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                value=\\\"{{employee.supervisor.empFirstName}} {{employee.supervisor.empLastName}}\\\" *ngIf=\\\"mode==='read'\\\"\\n                [readOnly]=\\\"true\\\">\\n            <p-dropdown class=\\\"form-control\\\" [options]=\\\"employeeDropdown\\\" [(ngModel)]=\\\"selectedSupervisor\\\"\\n                *ngIf=\\\"mode ==='create' || mode==='update'\\\"\\n                placeholder=\\\"{{employee.supervisor ? employee.supervisor.empFirstName + ' ' + employee.supervisor.empLastName : 'choose a supervisor'}}\\\"\\n                optionLabel=\\\"label\\\" [style]=\\\"{'border-width':'0px','padding':'0px','width':'100%'}\\\"></p-dropdown>\\n        </div>\\n        <span *ngIf=\\\"alerts.supervisor\\\" class=\\\"error my-2\\\"><small>{{alerts.supervisor.msg}}</small></span>\\n\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n</div>\\n<div class=\\\"  my-3\\\"></div>\\n\\n<div class=\\\"dropdown-divider  my-3\\\"></div>\\n<h5 class=\\\"my-3\\\">Activation</h5>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n        <!-- active/deactive -->\\n        <div class=\\\"input-group\\\">\\n            <!-- <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Activation</span>\\n                    </div> -->\\n            <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n                <label\\n                    [className]=\\\"employee.isActivated ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"radio\\\" name=\\\"activation\\\" id=\\\"active\\\" [value]=true [(ngModel)]=\\\"employee.isActivated\\\"\\n                        [disabled]=\\\"mode==='read'\\\">\\n                    Active\\n                </label>\\n                <label\\n                    [className]=\\\"employee.isActivated ? 'btn btn-outline-secondary' : 'btn btn-outline-secondary active'\\\">\\n                    <!--  [className]=\\\"employee.isActivated ? 'btn btn-outline-secondary' : 'btn btn-outline-secondary active'\\\" -->\\n                    <input type=\\\"radio\\\" name=\\\"activation\\\" id=\\\"deactive\\\" [value]=false [(ngModel)]=\\\"employee.isActivated\\\"\\n                        [disabled]=\\\"mode==='read'\\\"> Deactive\\n                </label>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<div class=\\\" my-3\\\"></div>\\n<div class=\\\"dropdown-divider  my-3\\\"></div>\\n<h5 class=\\\"my-3\\\">Permissions</h5>\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n        <!-- permission -->\\n        <div class=\\\"input-group\\\">\\n            <!-- <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Permissions</span>\\n                    </div> -->\\n            <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n                <label\\n                    [className]=\\\"employee.isAdmin ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"checkbox\\\" autocomplete=\\\"off\\\" [value]=\\\"!employee.isAdmin\\\" [disabled]=\\\"mode==='read'\\\"\\n                        [(ngModel)]=\\\"employee.isAdmin\\\">\\n                    Administrator Permission\\n                </label>\\n                <label\\n                    [className]=\\\"employee.isProjectManager ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"checkbox\\\" autocomplete=\\\"off\\\" [value]=\\\"!employee.isProjectManager\\\"\\n                        [disabled]=\\\"mode==='read'\\\" [(ngModel)]=\\\"employee.isProjectManager\\\"> PM/EM?? Manager\\n                    Permission\\n                </label>\\n                <label\\n                    [className]=\\\"employee.isHumanResources ? 'btn btn-outline-secondary active' : 'btn btn-outline-secondary'\\\">\\n                    <input type=\\\"checkbox\\\" autocomplete=\\\"off\\\" [value]=\\\"!employee.isHumanResources \\\"\\n                        [disabled]=\\\"mode==='read'\\\" [(ngModel)]=\\\"employee.isHumanResources\\\"> Humane Resource Permission\\n                </label>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"display-4\\\">Chanage Timesheet Approver</h3>\\n        <div class=\\\"dropdown-divider \\\"></div>\\n        <p class=\\\"lead\\\">The table below lists all your employees that you supervise.</p>\\n\\n        <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"displayEmployee\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n            [style]=\\\"{'text-align':'center'}\\\">\\n            <ng-template pTemplate=\\\"caption\\\">\\n                <div>\\n                    <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                    <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\n                        (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\n                </div>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\n                <tr>\\n                    <th style=\\\"width: 120px;\\\">Employee ID</th>\\n                    <th>Employee Name</th>\\n                    <th>Approver</th>\\n                    <th>Activation</th>\\n                    <th style=\\\"width: 250px;\\\"></th>\\n                </tr>\\n                <tr>\\n                    <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n                        <input *ngSwitchCase=\\\"'empCode'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empName'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empUsername'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'approverName'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n                <tr [pSelectableRow]=\\\"rowData\\\">\\n                    <td *ngFor=\\\"let col of columns\\\">\\n                        <span *ngIf=\\\"col.field !=='activation' && col.field !=='button'\\\">{{rowData[col.field]}}</span>\\n                        <h5 *ngIf=\\\"col.field ==='activation'\\\">\\n                            <span class=\\\"badge badge-success\\\" *ngIf=\\\"rowData[col.field]\\\">Activated</span>\\n                            <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!rowData[col.field]\\\">Deactivated</span>\\n                        </h5>\\n                        <div *ngIf=\\\"col.field ==='button'\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\"\\n                                (click)=\\\"openModal(rowData[employeeId],template)\\\">Change Timesheet Approver</button>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</div>\\n\\n<!-- rest pw confirmation window -->\\n<ng-template #template>\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Change Timesheet Approver</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <span class=\\\"lead\\\">Employee Information</span>\\n        <table class=\\\"container\\\">\\n            <tr class=\\\"row\\\">\\n                <td class=\\\"col-6\\\"><strong>Employee Name:</strong>\\n                    {{selectedEmp.empFirstName}} {{selectedEmp.empLastName}}</td>\\n                <td class=\\\"col-6\\\"><strong>Employee Id:</strong>\\n                    {{selectedEmp.employeeId}}</td>\\n            </tr>\\n        </table>\\n        <div class=\\\"dropdown-divider \\\"></div>\\n        <span class=\\\"lead\\\">New Timesheet Approver</span>\\n        <p-dropdown [options]=\\\"employeeDropdown\\\" [(ngModel)]=\\\"selectedEmp.timesheetApprover\\\" filter=\\\"true\\\"\\n            placeholder=\\\"{{selectedEmp.timesheetApprover ? (selectedEmp.timesheetApprover.empFirstName + ' ' + selectedEmp.timesheetApprover.empLastName) : 'choose an employee'}}\\\"\\n            optionLabel=\\\"label\\\" [style]=\\\"{'padding':'0px','width':'100%'}\\\"></p-dropdown>\\n    </div>\\n\\n    <!-- 'border-width':'0px', -->\\n\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary  m-1 px-3\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger  m-1 px-3\\\" (click)=\\\"onSaveChange()\\\">Save Change</button>\\n    </div>\\n</ng-template>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <!-- Title -->\\n        <h3 class=\\\"display-4\\\">Create Employee</h3>\\n        <!-- alert -->\\n        <shared-alertPromp [alerts]=\\\"alerts\\\"></shared-alertPromp>\\n\\n\\n        <app-employee [employee]=\\\"employee\\\" [mode]=\\\"mode\\\" [validUsername]=\\\"validUsername\\\"\\n            (changeEmpCode)=\\\"validateEmployeeCode()\\\" (changeUsername)=\\\"validateUserName()\\\"\\n            [validEmployeeCode]=\\\"validEmployeeCode\\\" [alerts]=\\\"alerts\\\"></app-employee>\\n\\n        <!-- Action section-->\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n        <div class=\\\"d-flex flex-row-reverse\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary  m-1 px-3\\\" (click)=\\\"onCreate($event)\\\">Create</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary m-1 px-2\\\" (click)=\\\"onCancel($event)\\\">Cancel</button>\\n        </div>\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n    </div>\\n\\n\\n</div>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <!-- Title -->\\n        <h3 class=\\\"display-4\\\">Employee Edit</h3>\\n        <!-- alert -->\\n        <shared-alertPromp [alerts]=\\\"alerts\\\"></shared-alertPromp>\\n\\n        <app-employee [employee]=\\\"employee\\\" [mode]=\\\"mode\\\" [alerts]=\\\"alerts\\\" *ngIf=\\\"employee\\\"\\n            [validUsername]=\\\"validUsername\\\" [validEmployeeCode]=\\\"validEmployeeCode\\\" (restPw)=\\\"openModal(template)\\\">\\n        </app-employee>\\n\\n\\n        <!-- Action section-->\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n        <div class=\\\"d-flex flex-row-reverse\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary  m-1 px-3\\\" (click)=\\\"onUpdate()\\\">Update</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary m-1 px-2\\\" (click)=\\\"onCancel($event)\\\">Cancel</button>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<!-- rest pw confirmation window -->\\n<ng-template #template *ngIf=\\\"selectedEmp\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Reset {{employee.empFirstName}}'s Password</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Are you sure reset the password of <strong> {{employee.empFirstName}} {{employee.empLastName}} </strong> to\\n        default?\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary  m-1 px-3\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger  m-1 px-3\\\" (click)=\\\"resetPw()\\\">Reset</button>\\n    </div>\\n</ng-template>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"display-4\\\">Employee List</h3>\\n        <div class=\\\"dropdown-divider \\\"></div>\\n\\n        <div class=\\\"d-flex flex-row-reverse\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary my-2\\\" routerLink=\\\"creation\\\">Create</button>\\n        </div>\\n\\n        <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"displayEmployee\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n            [style]=\\\"{'text-align':'center'}\\\">\\n            <ng-template pTemplate=\\\"caption\\\">\\n                <div style=\\\"text-align: right\\\">\\n                    <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                    <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\n                        (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\n                </div>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\n                <tr>\\n                    <th *ngFor=\\\"let col of columns\\\">\\n                        {{col.header}}\\n                    </th>\\n                </tr>\\n                <tr>\\n                    <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n                        <input *ngSwitchCase=\\\"'empCode'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empName'\\\" pInputText type=\\\"text\\\" style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'empUsername'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'supervisorName'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                        <input *ngSwitchCase=\\\"'approverName'\\\" pInputText type=\\\"text\\\"\\n                            style=\\\"margin-left:-6px;width: 100%;\\\"\\n                            (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n                <tr [pSelectableRow]=\\\"rowData\\\">\\n                    <td *ngFor=\\\"let col of columns\\\">\\n                        <span *ngIf=\\\"col.field !=='activation' && col.field !=='button'\\\">{{rowData[col.field]}}</span>\\n                        <h5 *ngIf=\\\"col.field ==='activation'\\\">\\n                            <span class=\\\"badge badge-success\\\" *ngIf=\\\"rowData[col.field]\\\">Activated</span>\\n                            <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!rowData[col.field]\\\">Deactivated</span>\\n                        </h5>\\n                        <div *ngIf=\\\"col.field ==='button'\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\"\\n                                [routerLink]=\\\"['view', rowData.employeeId]\\\">View</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\"\\n                                [routerLink]=\\\"['edit', rowData.employeeId]\\\">Edit</button>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</div>\"","export default \"<div class=\\\"d-flex justify-content-center align-items-center height70vh\\\">\\n    <div class=\\\"card\\\" style=\\\"width:400px\\\">\\n        <h4 class=\\\"card-header\\\">Change Your Password</h4>\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"changPwForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" readonly />\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Old Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Old Password is required</div>\\n                        <div *ngIf=\\\"f.password.errors.minLength\\\">minLength Password is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"passwordNew\\\">New Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"passwordNew\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.passwordNew.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.passwordNew.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.passwordNew.errors.required\\\">New Password is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"passwordNewRe\\\">Confirm New Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"passwordNewRe\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.passwordNewRe.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.passwordNewRe.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.passwordNewRe.errors.required\\\">Confirm Password is required</div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"changPwForm.errors?.passwordMatch && (changPwForm.touched || changPwForm.dirty)\\\"\\n                    class=\\\"cross-validation-error-message alert alert-danger\\\">\\n                    New Password is not matched.\\n                </div>\\n\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary  m-1 px-3\\\"\\n                    routerLink=\\\"/content/dashboard\\\">Cancel</button>\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    Submit\\n                </button>\\n                <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error.message}}</div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mx-1\\\">\\n    <div class=\\\"card-body\\\">\\n        <!-- Title -->\\n        <h3 class=\\\"display-4\\\">Employee</h3>\\n\\n        <app-employee [employee]=\\\"employee\\\" [mode]=\\\"mode\\\" [alerts]=\\\"alerts\\\" *ngIf=\\\"employee\\\"></app-employee>\\n\\n        <!-- Action section-->\\n        <div class=\\\"dropdown-divider my-3\\\"></div>\\n\\n    </div>\\n\\n\\n</div>\"","export default \".pass{\\n    color:green;\\n    font-style: normal;\\n}\\n.error{\\n    color:red;\\n    font-style: normal;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9lbXBsb3llZS9jb21wb25lbnQvZW1wbG95ZWUvZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFNBQVM7SUFDVCxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2VtcGxveWVlL2NvbXBvbmVudC9lbXBsb3llZS9lbXBsb3llZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhc3N7XG4gICAgY29sb3I6Z3JlZW47XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuLmVycm9ye1xuICAgIGNvbG9yOnJlZDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59Il19 */\"","import { Component, OnInit, TemplateRef, Input, Output, EventEmitter } from '@angular/core';\nimport { SelectItem } from 'primeng/api/selectitem';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { MODE } from 'src/app/shared/model/MODE';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  @Input() employee: Employee;\n  @Input() mode: MODE;\n  greadeDropdown: SelectItem[] = null;\n  employeeDropdown: SelectItem[] = null;\n  selectedGrade: SelectItem;\n  selectedSupervisor: SelectItem;\n  // userName validation\n  @Input() validUsername: boolean;\n  @Input() validEmployeeCode: boolean;\n  @Input() alerts;\n  @Output() restPw: EventEmitter<string> = new EventEmitter<string>();\n  @Output() changeUsername: EventEmitter<string> = new EventEmitter<string>();\n  @Output() changeEmpCode: EventEmitter<string> = new EventEmitter<string>();\n\n\n  constructor(\n    private employeeService: EmployeeService,\n  ) { }\n\n  ngOnInit() {\n    if (this.mode !== MODE.Read) this.populateEmployeeDropdown();\n    if (this.mode !== MODE.Read) this.populateLabourGradeDropdown();\n\n  }\n  populateLabourGradeDropdown() {\n    this.employeeService\n      .getLabourGrades()\n      .subscribe(greades => {\n        this.greadeDropdown = [];\n        console.log(greades);\n        greades.forEach(g => {\n          console.log(g);\n          this.greadeDropdown.push(\n            { label: `${g.labourGradeName}`, value: g.labourGradeId }\n          );\n        })\n        console.log(this.greadeDropdown);\n      })\n  }\n\n  populateEmployeeDropdown() {\n    this.employeeService\n      .getEmployees()\n      .subscribe(employees => {\n        this.employeeDropdown = [];\n        console.log(employees);\n        employees.forEach(e => {\n          console.log(e);\n          this.employeeDropdown.push(\n            { label: `${e.empFirstName} ${e.empLastName}`, value: e.employeeId }\n          );\n        })\n        console.log(this.employeeDropdown);\n      })\n  }\n\n  // exit event of emp id field\n  onExitEmployeeId() {\n    this.changeEmpCode.emit('payload');\n  }\n\n  // exit event of user name\n  onExitUserName() {\n    this.changeUsername.emit('payload');\n  }\n\n  // click reset password btn\n  onRestPw() {\n    this.restPw.emit('payload');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeCreationComponent } from './pages/employee-creation/employee-creation.component';\nimport { EmployeeListComponent } from './pages/employee-list/employee-list.component';\nimport { EmployeeViewComponent } from './pages/employee-view/employee-view.component';\nimport { EmployeeEditComponent } from './pages/employee-edit/employee-edit.component';\nimport { EmployeeChangeApproverComponent } from './pages/employee-change-approver/employee-change-approver.component';\nimport { EmployeeResetPWComponent } from './pages/employee-reset-pw/employee-reset-pw.component';\n\n\nconst routes: Routes = [\n  { path: '', component: EmployeeListComponent, data: { breadcrumb: null } },\n  { path: 'changePassword', component: EmployeeResetPWComponent, data: { breadcrumb: 'Change Password' } },\n  { path: 'supervisor/changeTimesheetApprover', component: EmployeeChangeApproverComponent, data: { breadcrumb: 'Change Timesheet Approver' } },\n  { path: 'view/:empId', component: EmployeeViewComponent, data: { breadcrumb: 'Employee View' } },\n  { path: 'edit/:empId', component: EmployeeEditComponent, data: { breadcrumb: 'Employee Edit' } },\n  { path: 'creation', component: EmployeeCreationComponent, data: { breadcrumb: 'Employee Creation' } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { EmployeeCreationComponent } from './pages/employee-creation/employee-creation.component';\n\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { AlertModule } from 'ngx-bootstrap';\nimport { EmployeeComponent } from './component/employee/employee.component';\nimport { EmployeeListComponent } from './pages/employee-list/employee-list.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { EmployeeViewComponent } from './pages/employee-view/employee-view.component';\nimport { EmployeeEditComponent } from './pages/employee-edit/employee-edit.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\n\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { EmployeeChangeApproverComponent } from './pages/employee-change-approver/employee-change-approver.component';\nimport { EmployeeResetPWComponent } from './pages/employee-reset-pw/employee-reset-pw.component';\n\n@NgModule({\n  declarations: [\n    EmployeeComponent,\n    EmployeeCreationComponent,\n    EmployeeListComponent,\n    EmployeeViewComponent,\n    EmployeeEditComponent,\n    EmployeeChangeApproverComponent,\n    EmployeeResetPWComponent,\n  ],\n  imports: [\n    CommonModule,\n    EmployeeRoutingModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule,\n\n    //material\n    MatButtonToggleModule,\n\n    //primeng\n    DropdownModule,\n    TableModule,\n    InputTextModule,\n    DialogModule,\n    ButtonModule,\n\n    ToastModule,\n    MessagesModule,\n    MessageModule,\n\n    // bootstrap\n    AlertModule.forRoot(),\n    ModalModule.forRoot(),\n    NgbModule,\n  ],\n\n})\nexport class EmployeeModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtY2hhbmdlLWFwcHJvdmVyL2VtcGxveWVlLWNoYW5nZS1hcHByb3Zlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { SelectItem } from 'primeng/api/selectitem';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { MyToastService } from 'src/app/core/service/my-toast.service';\n\n@Component({\n  selector: 'app-employee-change-approver',\n  templateUrl: './employee-change-approver.component.html',\n  styleUrls: ['./employee-change-approver.component.css']\n})\nexport class EmployeeChangeApproverComponent implements OnInit {\n\n\n  displayEmployee: any[] = [];\n  selectedEmp: Employee = null;\n  cols: any[];\n  employeeDropdown: SelectItem[] = null;\n  modalRef: BsModalRef;\n\n  constructor(\n    private employeeService: EmployeeService,\n    private modalService: BsModalService,\n    private myToastService: MyToastService,\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n    this.initEmployees();\n    this.initCols();\n    this.populateEmployeeDropdown();\n  }\n\n  initEmployees() {\n    this.employeeService.getAllChildrenEmployees(this.authService.currentUserValue.employeeId).subscribe(res => {\n      console.log(res);\n      res.forEach(i => {\n        console.log(i)\n        this.displayEmployee.push(\n          {\n            \"employeeId\": i.employeeId,\n            \"empCode\": i.empCode,\n            \"empName\": `${i.empFirstName} ${i.empLastName}`,\n            'approverName': `${i.timesheetApprover.empFirstName} ${i.timesheetApprover.empLastName}`,\n            'activation': i.isActivated,\n          }\n        );\n      })\n      console.log(this.displayEmployee)\n    });\n  }\n  initCols() {\n    this.cols = [\n      { field: 'empCode', header: 'Employee ID' },\n      { field: 'empName', header: 'Employee Name' },\n      { field: 'approverName', header: 'Approver' },\n      { field: 'activation', header: 'Activation' },\n      { field: 'button', header: '' },\n    ]\n  }\n\n  populateEmployeeDropdown() {\n    this.employeeService\n      .getEmployees()\n      .subscribe(employees => {\n        this.employeeDropdown = [];\n        // this.employeeDropdown.push({ label: `-----`, value: null });\n        employees.forEach(e => {\n          this.employeeDropdown.push(\n            { label: `${e.empFirstName} ${e.empLastName}`, value: e }\n          );\n        })\n        console.log(this.employeeDropdown);\n      })\n  }\n\n  openModal(id, template: TemplateRef<any>) {\n    console.log(id)\n    this.employeeService.getEmployee(id).subscribe(emp => {\n      this.selectedEmp = emp;\n      this.modalRef = this.modalService.show(template);\n    })\n  }\n\n  onSaveChange() {\n    this.employeeService.putEmployee(this.selectedEmp).subscribe(_ => {\n      this.modalRef.hide();\n      this.myToastService.addSuccess('Successfully changed Timesheet Approver', `${new Date().toLocaleString()}`);\n    })\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtY3JlYXRpb24vZW1wbG95ZWUtY3JlYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, TemplateRef, Pipe, PipeTransform } from '@angular/core';\nimport { SelectItem } from 'primeng/api/selectitem';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { Alert } from 'src/app/shared/model/Alert';\nimport { MODE } from 'src/app/shared/model/MODE';\n\n@Component({\n  selector: 'app-employee-creation',\n  templateUrl: './employee-creation.component.html',\n  styleUrls: ['./employee-creation.component.css']\n})\nexport class EmployeeCreationComponent implements OnInit {\n\n  employee: Employee;\n  grade: SelectItem[] = null;\n  employeeDropdown: SelectItem[] = null;\n  selectedGrade: SelectItem;\n  selectedSupervisor: SelectItem;\n  // userName validation\n  validUsername: boolean = false;\n  validEmployeeCode: boolean = false;\n  alerts = {};\n  mode = MODE.Create;\n\n  constructor(\n    private employeeService: EmployeeService,\n  ) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n    this.employee.isActivated = true;\n    this.employee.empPassword = \"01234\";\n  }\n\n  // btn click event of creation\n  onCreate(e: any) {\n    if (!this.validatePage())\n      return;\n    console.log(\"POST employee\");\n    console.log(JSON.stringify(this.employee));\n    this.employeeService.postEmployee(this.employee).subscribe();\n  }\n\n  // btn click event of cancel\n  onCancel(e: any) { }\n\n  validatePage(): boolean {\n    var result = true;\n    if (!this.employee.empFirstName === null || this.employee.empFirstName.match(/^ *$/) !== null) {\n      this.alerts['firstName'] = new Alert('danger', 5000, `First Name cannot be empty`);\n      result = false;\n    }\n    if (!this.employee.empLastName === null || this.employee.empLastName.match(/^ *$/) !== null) {\n      this.alerts['lastName'] = new Alert('danger', 5000, `Last Name cannot be empty`);\n      result = false;\n    }\n    if (!this.validUsername) {\n      this.alerts['userName'] = new Alert('danger', 5000, `User Name: ${this.employee.empUsername} is not allowed`);\n      result = false;\n    }\n    if (!this.validEmployeeCode) {\n      this.alerts['employeeCode'] = new Alert('danger', 5000, `Employee ID : ${this.employee.empCode} is not allowed`);\n      result = false;\n    }\n    return result;\n  }\n  displayErrorMsg(fieldName: string) {\n    return (this.alerts[fieldName] != '') ? this.alerts[fieldName].msg : null;\n  }\n\n\n\n  // exit event of emp id field\n  validateEmployeeCode() {\n    this.employeeService.checkUserEmployeeCodeOK(this.employee.empCode)\n      .subscribe(response => {\n        console.log(response);\n        this.validEmployeeCode = response;\n      });\n  }\n\n  // exit event of user name\n  validateUserName() {\n    this.employeeService.checkUserNameOK(this.employee.empUsername)\n      .subscribe(response => {\n        console.log(response);\n        this.validUsername = response;\n      })\n\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtZWRpdC9lbXBsb3llZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { MODE } from 'src/app/shared/model/MODE';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { Alert } from 'src/app/shared/model/Alert';\nimport { MyToastService } from 'src/app/core/service/my-toast.service';\n\n\n\n@Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css'],\n})\nexport class EmployeeEditComponent implements OnInit {\n\n  employee: Employee;\n  mode = MODE.Update;\n  alerts = {};\n  modalRef: BsModalRef;\n  validUsername: boolean = true;\n  validEmployeeCode: boolean = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private employeeService: EmployeeService,\n    private modalService: BsModalService,\n    private myToastService: MyToastService,\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      var id = params.get('empId');\n      this.employeeService.getEmployee(id).subscribe(e => this.employee = e);\n    });\n  }\n\n  openModal(template: TemplateRef<any>) {\n    console.log('opne')\n    console.log(template)\n    this.modalRef = this.modalService.show(template);\n  }\n  resetPw() {\n    this.employee.empPassword = '01234';\n    this.employeeService.getEmployee(this.employee.employeeId).subscribe(emp => {\n      emp.empPassword = '01234';\n      this.employeeService.putEmployee(emp);\n      this.modalRef.hide();\n      this.myToastService.addSuccess('Password Changed', 'Reset to defaul password.');\n\n    })\n    //TODO: SHOW MESSAGE.\n  }\n  // btn click event of creation\n  onUpdate() {\n    if (!this.validatePage())\n      return;\n    console.log(\"POST employee\");\n    console.log(JSON.stringify(this.employee));\n    this.employeeService.postEmployee(this.employee).subscribe(_ => {\n      this.myToastService.addSuccess('Update successfully', `${this.employee.empFirstName + ' ' + this.employee.empLastName} is updated.`);\n      this.router.navigate([`/content/employees/view/${this.employee.employeeId}`]);\n    });\n  }\n\n  // btn click event of cancel\n  onCancel(e: any) {\n    this.router.navigate([`/content/employees`]);\n  }\n\n  validatePage(): boolean {\n    var result = true;\n    if (!this.employee.empFirstName === null || this.employee.empFirstName.match(/^ *$/) !== null) {\n      this.alerts['firstName'] = new Alert('danger', 5000, `First Name cannot be empty`);\n      result = false;\n    }\n    if (!this.employee.empLastName === null || this.employee.empLastName.match(/^ *$/) !== null) {\n      this.alerts['lastName'] = new Alert('danger', 5000, `Last Name cannot be empty`);\n      result = false;\n    }\n    if (!this.validUsername) {\n      this.alerts['userName'] = new Alert('danger', 5000, `User Name: ${this.employee.empUsername} is not allowed`);\n      result = false;\n    }\n    if (!this.validEmployeeCode) {\n      this.alerts['employeeCode'] = new Alert('danger', 5000, `Employee ID : ${this.employee.empCode} is not allowed`);\n      result = false;\n    }\n    return result;\n  }\n\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtbGlzdC9lbXBsb3llZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  displayEmployee: any[] = [];\n  cols: any[];\n\n  constructor(\n    private employeeService: EmployeeService\n  ) { }\n\n  ngOnInit() {\n    this.initEmployees();\n    this.initCols();\n  }\n\n  initEmployees() {\n    this.employeeService.getEmployees().subscribe(res => {\n      console.log(res);\n      res.forEach(i => {\n        console.log(i)\n        this.displayEmployee.push(\n          {\n            \"employeeId\": i.employeeId,\n            \"empCode\": i.empCode,\n            \"empName\": `${i.empFirstName} ${i.empLastName}`,\n            \"empUsername\": i.empUsername,\n            'supervisorName': `${i.supervisor.empFirstName} ${i.supervisor.empLastName}`,\n            'approverName': `${i.timesheetApprover.empFirstName} ${i.timesheetApprover.empLastName}`,\n            'activation': i.isActivated,\n          }\n        );\n      })\n      console.log(this.displayEmployee)\n    });\n  }\n  initCols() {\n    this.cols = [\n      { field: 'empCode', header: 'Employee ID' },\n      { field: 'empName', header: 'Employee Name' },\n      { field: 'empUsername', header: 'User Name' },\n      { field: 'supervisorName', header: 'Supervisor' },\n      { field: 'approverName', header: 'Approver' },\n      { field: 'activation', header: 'Activation' },\n      { field: 'button', header: '' },\n    ]\n  }\n\n}\n","export default \".height70vh{\\n    height: 70vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9lbXBsb3llZS9wYWdlcy9lbXBsb3llZS1yZXNldC1wdy9lbXBsb3llZS1yZXNldC1wdy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtcmVzZXQtcHcvZW1wbG95ZWUtcmVzZXQtcHcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWlnaHQ3MHZoe1xuICAgIGhlaWdodDogNzB2aDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-employee-reset-pw',\n  templateUrl: './employee-reset-pw.component.html',\n  styleUrls: ['./employee-reset-pw.component.css']\n})\nexport class EmployeeResetPWComponent implements OnInit {\n\n  changPwForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = null;\n\n  currentUserId: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n    this.changPwForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      passwordNew: ['', Validators.required],\n      passwordNewRe: ['', Validators.required],\n    },\n      { validator: passwordMatch }\n    );\n    this.currentUserId = this.authenticationService.currentUserValue.credentialId;\n    this.f.username.setValue(this.currentUserId);\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.changPwForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.changPwForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.authenticationService\n      .changePW(this.currentUserId, this.f.password.value, this.f.passwordNew.value)\n      .subscribe(\n        result => {\n          if (result) {\n            this.authenticationService.logout();\n          }\n          if (!result) {\n            this.error = 'We cannot change your Password. Please Make sure your old password is correct.'\n          }\n        },\n        error => {\n          console.log(error);\n          this.error = error.error;\n          this.loading = false;\n        }\n      )\n  }\n\n}\n\n// export function passwordMatch(newPw:string): ValidatorFn {\n//   return (control: AbstractControl): {[key: string]: any} | null => {\n//     const result = (newPw===control.value);\n//     return result ? {'passwordMatch': {value: control.value}} : null;\n//   };\n// }\n\nexport const passwordMatch: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n  const pw = control.get('passwordNew');\n  const pwRe = control.get('passwordNewRe');\n\n  return pw && pwRe && pw.value === pwRe.value ? null : { 'passwordMatch': true };\n};","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvcGFnZXMvZW1wbG95ZWUtdmlldy9lbXBsb3llZS12aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/core/service/employee/employee.service';\nimport { Employee } from 'src/app/shared/model/Employee';\nimport { MODE } from 'src/app/shared/model/MODE';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-view',\n  templateUrl: './employee-view.component.html',\n  styleUrls: ['./employee-view.component.css']\n})\nexport class EmployeeViewComponent implements OnInit {\n\n\n  employee: Employee;\n  mode = MODE.Read;\n  alerts = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private employeeService: EmployeeService,\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      var id = params.get('empId');\n      this.employeeService.getEmployee(id).subscribe(e => this.employee = e);\n    });\n\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///","file":"modules-employee-employee-module-es5.js"}